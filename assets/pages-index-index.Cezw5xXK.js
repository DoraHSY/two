import{c as t,a,s as e,b as s,d as o,p as i,e as n,f as l,h as c,u as r,g as h,w as u,i as d,o as C,j as p,k as g,l as v,m as f,r as m,F as w,n as y,q as x,t as k,v as I,x as F,y as P,z as _,I as M,A as b}from"./index-OyPPr7ec.js";const D=""+new URL("bg_architecture-Cw0O17K8.png",import.meta.url).href,S=""+new URL("cloud-upload-CTmrf4YP.png",import.meta.url).href,H=""+new URL("outline-building-afNQu6p-.png",import.meta.url).href;const R=((t,a)=>{const e=t.__vccOpts||t;for(const[s,o]of a)e[s]=o;return e})({data:()=>({inputImage:"",outputImage:"",outputImagePath:"",loading:!1,isDrawMode:!1,canvasContext:null,drawing:!1,lastX:0,lastY:0,currentColor:"#000000",drawingHistory:[],showColorPicker:!1,fillMode:!0,customColor:"#000000",colorPalette:["#000000","#FF0000","#00FF00","#0000FF","#FFFF00","#FF00FF","#00FFFF","#FFA500","#800080","#008000","#800000","#008080","#000080","#808080","#C0C0C0","#FFB6C1","#FFD700","#ADFF2F","#FF4500","#2E8B57"],currentPath:[],paths:[],canvasWidth:300,canvasHeight:400,isInitialized:!1,canvasRect:null}),mounted(){this.initCanvas()},methods:{async initCanvas(){this.isInitialized||(this.canvasContext=t("drawingCanvas",this),await this.getCanvasRect(),this.canvasContext.setFillStyle("#ffffff"),this.canvasContext.fillRect(0,0,this.canvasWidth,this.canvasHeight),this.canvasContext.draw(!0),this.paths=[],this.currentPath=[],this.isInitialized=!0,console.log("Canvas initialized successfully"))},async getCanvasRect(){return new Promise((t=>{a().in(this).select("#drawingCanvas").boundingClientRect((a=>{a&&(this.canvasWidth=a.width,this.canvasHeight=a.height,this.canvasRect=a),t(a)})).exec()}))},async setMode(t){this.isDrawMode=t,t&&(this.inputImage="",await this.$nextTick(),await this.initCanvas(),this.clearCanvas())},async getEventPosition(t){let a,e;if(this.canvasRect||await this.getCanvasRect(),t.type.includes("touch")){const s=t.touches[0];a=s.clientX,e=s.clientY}else a=t.clientX,e=t.clientY;const s=a-this.canvasRect.left,o=e-this.canvasRect.top;return{x:Math.max(0,Math.min(s,this.canvasWidth)),y:Math.max(0,Math.min(o,this.canvasHeight))}},async handleDrawStart(t){t.preventDefault&&t.preventDefault();const a=await this.getEventPosition(t);this.drawing=!0,this.lastX=a.x,this.lastY=a.y,this.currentPath=[{x:a.x,y:a.y}],this.saveCanvasState(),this.canvasContext.setStrokeStyle(this.currentColor),this.canvasContext.setLineWidth(this.fillMode?3:2),this.canvasContext.setLineCap("round"),this.canvasContext.setLineJoin("round"),this.canvasContext.beginPath(),this.canvasContext.moveTo(a.x,a.y)},async handleDrawMove(t){if(!this.drawing)return;t.preventDefault&&t.preventDefault();const a=await this.getEventPosition(t);this.currentPath.push({x:a.x,y:a.y}),this.canvasContext.setStrokeStyle(this.currentColor),this.canvasContext.setLineWidth(this.fillMode?3:2),this.canvasContext.setLineCap("round"),this.canvasContext.setLineJoin("round"),this.canvasContext.lineTo(a.x,a.y),this.canvasContext.stroke(),this.canvasContext.draw(!0),this.canvasContext.moveTo(a.x,a.y),this.lastX=a.x,this.lastY=a.y},async handleDrawEnd(t){if(this.drawing){if(t.preventDefault&&t.preventDefault(),this.drawing=!1,this.currentPath.length>1){const t={points:[...this.currentPath],color:this.currentColor,fillMode:this.fillMode};this.paths.push(t),this.isClosedShape(this.currentPath)&&this.fillMode&&(this.fillClosedShape(this.currentPath,this.currentColor),e({title:"检测到封闭图形，已自动填充",icon:"none",duration:1500}))}this.currentPath=[]}},toggleColorPicker(){this.showColorPicker=!this.showColorPicker},selectColor(t){this.currentColor=t,this.showColorPicker=!1,e({title:"已选择颜色",icon:"none",duration:1e3})},validateColor(){/^#([0-9A-Fa-f]{6}|[0-9A-Fa-f]{3})$/.test(this.customColor)||console.log("颜色格式不正确")},confirmCustomColor(){this.validateColor(),this.currentColor=this.customColor,this.showColorPicker=!1,e({title:"已选择自定义颜色",icon:"none",duration:1e3})},toggleFillMode(){this.fillMode=!this.fillMode,e({title:this.fillMode?"已切换为填充模式":"已切换为描边模式",icon:"none",duration:1e3})},isClosedShape(t){if(t.length<8)return!1;const a=t[0],e=t[t.length-1];return Math.sqrt(Math.pow(e.x-a.x,2)+Math.pow(e.y-a.y,2))<20},fillClosedShape(t,a){this.canvasContext.setFillStyle(a),this.canvasContext.beginPath(),this.canvasContext.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;e++)this.canvasContext.lineTo(t[e].x,t[e].y);this.canvasContext.closePath(),this.canvasContext.fill(),this.canvasContext.draw(!0)},saveCanvasState(){this.drawingHistory.push({timestamp:Date.now(),paths:JSON.parse(JSON.stringify(this.paths))}),this.drawingHistory.length>10&&this.drawingHistory.shift()},undo(){if(this.drawingHistory.length>1){this.drawingHistory.pop();const t=this.drawingHistory[this.drawingHistory.length-1];this.paths=t?t.paths:[],this.redrawCanvas(),e({title:"已撤销",icon:"none",duration:1e3})}else 1===this.drawingHistory.length&&(this.drawingHistory=[],this.paths=[],this.redrawCanvas(),e({title:"已撤销",icon:"none",duration:1e3}))},redrawCanvas(){this.canvasContext.clearRect(0,0,this.canvasWidth,this.canvasHeight),this.canvasContext.setFillStyle("#ffffff"),this.canvasContext.fillRect(0,0,this.canvasWidth,this.canvasHeight),this.paths.forEach((t=>{this.drawContinuousPath(t.points,t.color,t.fillMode?3:2),t.fillMode&&this.isClosedShape(t.points)&&this.fillClosedShape(t.points,t.color)})),this.canvasContext.draw(!0)},drawContinuousPath(t,a,e=2){if(!(t.length<2)){this.canvasContext.setStrokeStyle(a),this.canvasContext.setLineWidth(e),this.canvasContext.setLineCap("round"),this.canvasContext.setLineJoin("round"),this.canvasContext.beginPath(),this.canvasContext.moveTo(t[0].x,t[0].y);for(let a=1;a<t.length;a++)this.canvasContext.lineTo(t[a].x,t[a].y);this.canvasContext.stroke()}},clearCanvas(){this.canvasContext.clearRect(0,0,this.canvasWidth,this.canvasHeight),this.canvasContext.setFillStyle("#ffffff"),this.canvasContext.fillRect(0,0,this.canvasWidth,this.canvasHeight),this.drawingHistory=[],this.paths=[],this.currentPath=[],this.canvasContext.draw(!0),e({title:"画布已清空",icon:"none",duration:1e3})},getCanvasImage(){return new Promise((t=>{s({canvasId:"drawingCanvas",success:a=>{t(a.tempFilePath)},fail:a=>{console.error("获取画布图片失败:",a),t(null)}},this)}))},async chooseImage(){try{const t=(await new Promise(((t,a)=>{o({count:1,success:t,fail:a})}))).tempFilePaths[0];console.log("File selected: ",t),this.inputImage=t}catch(t){console.error("选择图片失败:",t),e({title:"图片选择失败",icon:"none"})}},clearInput(){this.inputImage=""},clearOutput(){this.outputImage="",this.outputImagePath=""},previewOutputImage(){this.outputImagePath&&i({urls:[this.outputImagePath]})},saveOutputImage(){this.outputImagePath&&n({filePath:this.outputImagePath,success:()=>e({title:"保存成功"}),fail:()=>e({title:"保存失败",icon:"none"})})},async convertImage(){let t="";if(this.isDrawMode){if(t=await this.getCanvasImage(),!t)return void e({title:"请先绘制图像",icon:"none"})}else{if(!this.inputImage)return void e({title:"请先选择图片",icon:"none"});t=this.inputImage}this.loading=!0,l({title:"AI处理中...",mask:!0});try{t.startsWith("blob:")?await this.uploadBlobImage(t):await this.uploadFileImage(t)}catch(a){console.error("转换错误:",a),e({title:a.message||"转换失败",icon:"none"})}finally{this.loading=!1,c()}},async uploadFileImage(t){const a=await new Promise(((a,e)=>{r({url:"http://localhost:5000/api/transform",filePath:t,name:"image",success:a,fail:e})}));await this.handleServerResponse(a)},async uploadBlobImage(t){try{const a=await fetch(t),e=await a.blob(),s=new FormData;s.append("image",e,"image.jpg");const o=await fetch("http://localhost:5000/api/transform",{method:"POST",body:s});if(!o.ok)throw new Error(`上传失败: ${o.status}`);const i=await o.json();await this.handleOutputImage(i.image)}catch(a){throw console.error("Blob 上传错误:",a),a}},async handleServerResponse(t){if(200!==t.statusCode)throw new Error(`服务器错误: ${t.statusCode}`);{const a=JSON.parse(t.data);if("success"!==a.status||!a.image)throw new Error(a.error||"转换失败");await this.handleOutputImage(a.image),e({title:"转换完成"})}},async handleOutputImage(t){try{let a=t;a.startsWith("data:image/")||(a=`data:image/jpeg;base64,${t}`),this.outputImage=a}catch(a){console.error("处理输出图片错误:",a)}}}},[["render",function(t,a,e,s,o,i){const n=F,l=P,c=d,r=_,R=M,T=b;return C(),h(c,{class:"page-container"},{default:u((()=>[p(n,{class:"background",src:D,mode:"aspectFill"}),p(c,{class:"title-bar"},{default:u((()=>[p(l,{class:"title-text"},{default:u((()=>[g("AI辅助立面设计")])),_:1})])),_:1}),p(c,{class:"glass-card"},{default:u((()=>[p(c,{class:"card-header"},{default:u((()=>[p(l,{class:"card-title"},{default:u((()=>[g("上传图片")])),_:1})])),_:1}),o.isDrawMode?(C(),h(c,{key:1,class:"canvas-container"},{default:u((()=>[p(r,{"canvas-id":"drawingCanvas",id:"drawingCanvas",class:"drawing-canvas",onTouchstart:i.handleDrawStart,onTouchmove:i.handleDrawMove,onTouchend:i.handleDrawEnd,onMousedown:i.handleDrawStart,onMousemove:i.handleDrawMove,onMouseup:i.handleDrawEnd,onMouseleave:i.handleDrawEnd,"disable-scroll":"true"},null,8,["onTouchstart","onTouchmove","onTouchend","onMousedown","onMousemove","onMouseup","onMouseleave"]),o.showColorPicker?(C(),h(c,{key:0,class:"color-picker-modal",onClick:a[2]||(a[2]=t=>o.showColorPicker=!1)},{default:u((()=>[p(c,{class:"color-picker-content",onClick:a[1]||(a[1]=v((()=>{}),["stop"]))},{default:u((()=>[p(c,{class:"color-picker-title"},{default:u((()=>[g("选择颜色")])),_:1}),p(c,{class:"color-palette"},{default:u((()=>[(C(!0),f(w,null,m(o.colorPalette,(t=>(C(),h(c,{key:t,class:"color-option",style:y({backgroundColor:t}),onClick:a=>i.selectColor(t)},null,8,["style","onClick"])))),128))])),_:1}),p(c,{class:"custom-color-area"},{default:u((()=>[p(l,{class:"custom-color-label"},{default:u((()=>[g("自定义颜色:")])),_:1}),p(c,{class:"color-input-row"},{default:u((()=>[p(R,{type:"text",modelValue:o.customColor,"onUpdate:modelValue":a[0]||(a[0]=t=>o.customColor=t),class:"color-input",placeholder:"#000000",onInput:i.validateColor},null,8,["modelValue","onInput"]),p(c,{class:"color-preview",style:y({backgroundColor:o.customColor})},null,8,["style"])])),_:1})])),_:1}),p(T,{class:"confirm-btn",onClick:i.confirmCustomColor},{default:u((()=>[g("确认")])),_:1},8,["onClick"])])),_:1})])),_:1})):x("",!0)])),_:1})):(C(),h(c,{key:0,class:"image-upload",onClick:i.chooseImage},{default:u((()=>[o.inputImage?(C(),h(n,{key:0,src:o.inputImage,class:"image-preview",mode:"aspectFit"},null,8,["src"])):(C(),h(c,{key:1,class:"upload-placeholder"},{default:u((()=>[p(n,{src:S,class:"icon"}),p(l,{class:"upload-text"},{default:u((()=>[g("点击上传建筑图像")])),_:1})])),_:1}))])),_:1},8,["onClick"])),p(c,{class:"button-row"},{default:u((()=>[!o.isDrawMode&&o.inputImage?(C(),h(T,{key:0,class:"secondary-btn",onClick:v(i.clearInput,["stop"])},{default:u((()=>[g("清空")])),_:1},8,["onClick"])):x("",!0),o.isDrawMode?(C(),h(c,{key:1,class:"draw-tools"},{default:u((()=>[p(T,{class:"color-picker-btn",onClick:i.toggleColorPicker},{default:u((()=>[p(c,{class:"current-color-indicator",style:y({backgroundColor:o.currentColor})},null,8,["style"]),p(l,null,{default:u((()=>[g("取色")])),_:1})])),_:1},8,["onClick"]),p(T,{class:"secondary-btn",onClick:i.undo},{default:u((()=>[g("撤销")])),_:1},8,["onClick"]),p(T,{class:"secondary-btn",onClick:i.clearCanvas},{default:u((()=>[g("清空")])),_:1},8,["onClick"]),p(T,{class:"secondary-btn",onClick:i.toggleFillMode},{default:u((()=>[p(l,null,{default:u((()=>[g(k(o.fillMode?"填充模式":"描边模式"),1)])),_:1})])),_:1},8,["onClick"])])),_:1})):x("",!0)])),_:1})])),_:1}),p(c,{class:"action-area"},{default:u((()=>[p(T,{class:I(["mode-btn",{active:!o.isDrawMode}]),onClick:a[3]||(a[3]=t=>i.setMode(!1))},{default:u((()=>[g("导入")])),_:1},8,["class"]),p(T,{class:"primary-btn",disabled:o.loading,onClick:i.convertImage},{default:u((()=>[o.loading?(C(),h(c,{key:0,class:"loader"})):(C(),h(l,{key:1},{default:u((()=>[g("转换")])),_:1}))])),_:1},8,["disabled","onClick"]),p(T,{class:I(["mode-btn",{active:o.isDrawMode}]),onClick:a[4]||(a[4]=t=>i.setMode(!0))},{default:u((()=>[g("绘制")])),_:1},8,["class"])])),_:1}),p(c,{class:"glass-card"},{default:u((()=>[p(c,{class:"card-header"},{default:u((()=>[p(l,{class:"card-title"},{default:u((()=>[g("转换结果")])),_:1})])),_:1}),p(c,{class:"image-upload"},{default:u((()=>[o.outputImage?(C(),h(n,{key:0,src:o.outputImage,class:"image-preview",mode:"aspectFit",onClick:i.previewOutputImage,onLongpress:i.saveOutputImage},null,8,["src","onClick","onLongpress"])):(C(),h(c,{key:1,class:"upload-placeholder"},{default:u((()=>[p(n,{src:H,class:"icon"}),p(l,{class:"upload-text"},{default:u((()=>[g("这里将展示AI生成的立面效果")])),_:1})])),_:1}))])),_:1}),o.outputImage?(C(),h(T,{key:0,class:"secondary-btn",onClick:v(i.clearOutput,["stop"])},{default:u((()=>[g("清空")])),_:1},8,["onClick"])):x("",!0)])),_:1})])),_:1})}],["__scopeId","data-v-ada47e24"]]);export{R as default};
